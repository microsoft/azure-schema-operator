<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorials on Azure Schema Operator</title><link>https://microsoft.github.io/azure-schema-operator/tutorials/</link><description>Recent content in Tutorials on Azure Schema Operator</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://microsoft.github.io/azure-schema-operator/tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://microsoft.github.io/azure-schema-operator/tutorials/eventhub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://microsoft.github.io/azure-schema-operator/tutorials/eventhub/</guid><description>Eventhub schema regitery tutorial # Creating the ConfigMap:
kubectl create configmap event-demo --from-literal templateName=&amp;#34;schemaop&amp;#34; --from-literal group=&amp;#34;testsgr&amp;#34; \ --from-file=schema=docs/samples/eventhubs/avro-schema.json next we need to define a SchemaDeployment object that will reference the ConfigMap.
apiVersion: dbschema.microsoft.com/v1alpha1 kind: SchemaDeployment metadata: name: eventhub-schema-demo spec: type: eventhub applyTo: clusterUris: [&amp;#39;schematest.servicebus.windows.net&amp;#39;] failIfDataLoss: false failurePolicy: abort source: name: event-demo namespace: default and apply it via kubectl:
kubectl apply -f docs/samples/eventhubs/eventhub-schema-demo.yaml To demonstrate schema evolution, we will add a new field:</description></item><item><title/><link>https://microsoft.github.io/azure-schema-operator/tutorials/kusto/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://microsoft.github.io/azure-schema-operator/tutorials/kusto/</guid><description>Azure Data Explorer (ADX, AKA Kusto) Tutorial # In this short tutorial we will review the process of managing a schema, performing a change and rollback in the case of an error. We will deploy 3 revisions of our schema, with an error on the third schema triggering a rollback.
The schema is represented in kql field in a standard ConfigMap which contains ADX schemas described as KQLs.. More details on KQL files can be found in the delta-kusto instructions</description></item><item><title/><link>https://microsoft.github.io/azure-schema-operator/tutorials/sqlserver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://microsoft.github.io/azure-schema-operator/tutorials/sqlserver/</guid><description>SQL Server Tutorial # A common multi-tenancy architecture for sqlserver is using a schema per tenant. This tutorial will show how to deploy the schema given in a DACPAC format to each schema in the database.
The tutorial uses a sample dacpac with a sales schema.
MSI is used to authenticate in the tutorial as it&amp;rsquo;s simpler.
we need to add the MSI as a user to the DB, e.</description></item></channel></rss>