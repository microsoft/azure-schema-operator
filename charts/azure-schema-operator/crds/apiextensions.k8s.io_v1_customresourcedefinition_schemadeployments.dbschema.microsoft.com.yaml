apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: schemadeployments.dbschema.microsoft.com
spec:
  group: dbschema.microsoft.com
  names:
    kind: SchemaDeployment
    listKind: SchemaDeploymentList
    plural: schemadeployments
    singular: schemadeployment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.type
      name: TYPE
      type: string
    - jsonPath: .status.conditions[?(@.type=='Execution')].status
      name: Executed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SchemaDeployment is the Base CRD for the schema deployment operator
          it is used to define which schema to deploy to a target cluster
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SchemaDeploymentSpec defines the desired state of SchemaDeployment
            properties:
              applyTo:
                description: TargetFilter contains target filter configuration
                properties:
                  clusterUris:
                    items:
                      type: string
                    minItems: 1
                    type: array
                  create:
                    type: boolean
                  db:
                    type: string
                  dbs:
                    items:
                      type: string
                    type: array
                  label:
                    type: string
                  regexp:
                    type: boolean
                  schema:
                    type: string
                  webhook:
                    type: string
                required:
                - clusterUris
                - db
                type: object
              failIfDataLoss:
                default: true
                type: boolean
              failurePolicy:
                default: rollback
                description: FailurePolicyEnum Enum for the different failure policies
                enum:
                - abort
                - ignore
                - rollback
                type: string
              source:
                description: NamespacedName is an object identifier
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
              type:
                description: DBTypeEnum Enum for the supported DB types
                type: string
            required:
            - applyTo
            - failIfDataLoss
            - type
            type: object
          status:
            description: SchemaDeploymentStatus defines the observed state of SchemaDeployment
            properties:
              conditions:
                description: 'Conditions is an array of conditions. Known .status.conditions.type
                  are: "Execution"'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              currentConfigMap:
                description: NamespacedName is an object identifier
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
              currentRevision:
                format: int32
                type: integer
              currentVerDeployment:
                description: NamespacedName is an object identifier
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
              desiredNumberScheduled:
                format: int32
                type: integer
              executed:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                type: boolean
              lastConfigMap:
                type: string
              lastSuccessfulRevision:
                format: int32
                type: integer
              oldVerDeployment:
                items:
                  description: NamespacedName is an object identifier
                  properties:
                    name:
                      type: string
                    namespace:
                      type: string
                  required:
                  - name
                  - namespace
                  type: object
                type: array
            required:
            - currentConfigMap
            - currentRevision
            - currentVerDeployment
            - desiredNumberScheduled
            - executed
            - lastConfigMap
            - lastSuccessfulRevision
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
